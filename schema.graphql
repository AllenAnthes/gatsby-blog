directive @default(value: JSON!) on INPUT_FIELD_DEFINITION
directive @dateformat(formatString: String, locale: String) on FIELD_DEFINITION
directive @link(by: String! = "id", from: String) on FIELD_DEFINITION
directive @fileByRelativePath(from: String) on FIELD_DEFINITION
directive @proxy(from: String) on FIELD_DEFINITION
directive @infer(noDefaultResolvers: Boolean) on OBJECT
directive @dontInfer(noDefaultResolvers: Boolean) on OBJECT
input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

scalar Date

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

type Directory implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  sourceInstanceName: String
  absolutePath: String
  relativePath: String
  extension: String
  size: Int
  prettySize: String
  modifiedTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  accessTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  changeTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  birthTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  root: String
  dir: String
  base: String
  ext: String
  name: String
  relativeDirectory: String
  dev: Float
  mode: Int
  nlink: Int
  uid: Int
  gid: Int
  rdev: Int
  ino: Float
  atimeMs: Float
  mtimeMs: Float
  ctimeMs: Float
  birthtimeMs: Float
  atime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  mtime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  ctime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  birthtime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  group(
    skip: Int
    limit: Int
    field: DirectoryFieldsEnum!
  ): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  birthtimeMs
  atime
  mtime
  ctime
  birthtime
}

input DirectoryFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: FloatQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String
  shadow: String
  opacity: Int
}

type File implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  sourceInstanceName: String
  absolutePath: String
  relativePath: String
  extension: String
  size: Int
  prettySize: String
  modifiedTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  accessTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  changeTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  birthTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  root: String
  dir: String
  base: String
  ext: String
  name: String
  relativeDirectory: String
  dev: Float
  mode: Int
  nlink: Int
  uid: Int
  gid: Int
  rdev: Int
  ino: Float
  atimeMs: Float
  mtimeMs: Float
  ctimeMs: Float
  birthtimeMs: Float
  atime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  mtime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  ctime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  birthtime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
  url: String
  publicURL: String
  childMdx: Mdx
  childImageSharp: ImageSharp
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

enum FileFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  birthtimeMs
  atime
  mtime
  ctime
  birthtime
  url
  publicURL
}

input FileFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: FloatQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  url: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

enum HeadingsMdx {
  h1
  h2
  h3
  h4
  h5
  h6
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
}

enum ImageFormat {
  NO_CHANGE
  JPG
  PNG
  WEBP
}

type ImageSharp implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  fixed(
    width: Int
    height: Int
    base64Width: Int
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    grayscale: Boolean = false
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    rotate: Int = 0
  ): ImageSharpFixed
  resolutions(
    width: Int
    height: Int
    base64Width: Int
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    grayscale: Boolean = false
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    rotate: Int = 0
  ): ImageSharpResolutions
  @deprecated(
    reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \\\"fixed\\\" https://example.com/write-docs-and-fix-this-example-link"
  )
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    sizes: String = ""
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  sizes(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    toFormat: ImageFormat = NO_CHANGE
    toFormatBase64: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    sizes: String = ""
    srcSetBreakpoints: [Int] = []
  ): ImageSharpSizes
  @deprecated(
    reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \\\"fluid\\\" https://example.com/write-docs-and-fix-this-example-link"
  )
  original: ImageSharpOriginal
  resize(
    width: Int
    height: Int
    quality: Int
    jpegProgressive: Boolean = true
    pngCompressionLevel: Int = 9
    pngCompressionSpeed: Int = 4
    grayscale: Boolean = false
    duotone: DuotoneGradient
    base64: Boolean = false
    traceSVG: Potrace
    toFormat: ImageFormat = NO_CHANGE
    cropFocus: ImageCropFocus = ATTENTION
    rotate: Int = 0
  ): ImageSharpResize
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  group(
    skip: Int
    limit: Int
    field: ImageSharpFieldsEnum!
  ): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  fixed___base64
  fixed___tracedSVG
  fixed___aspectRatio
  fixed___width
  fixed___height
  fixed___src
  fixed___srcSet
  fixed___srcWebp
  fixed___srcSetWebp
  fixed___originalName
  resolutions___base64
  resolutions___tracedSVG
  resolutions___aspectRatio
  resolutions___width
  resolutions___height
  resolutions___src
  resolutions___srcSet
  resolutions___srcWebp
  resolutions___srcSetWebp
  resolutions___originalName
  fluid___base64
  fluid___tracedSVG
  fluid___aspectRatio
  fluid___src
  fluid___srcSet
  fluid___srcWebp
  fluid___srcSetWebp
  fluid___sizes
  fluid___originalImg
  fluid___originalName
  fluid___presentationWidth
  fluid___presentationHeight
  sizes___base64
  sizes___tracedSVG
  sizes___aspectRatio
  sizes___src
  sizes___srcSet
  sizes___srcWebp
  sizes___srcSetWebp
  sizes___sizes
  sizes___originalImg
  sizes___originalName
  sizes___presentationWidth
  sizes___presentationHeight
  original___width
  original___height
  original___src
  resize___src
  resize___tracedSVG
  resize___width
  resize___height
  resize___aspectRatio
  resize___originalName
}

input ImageSharpFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  fixed: ImageSharpFixedFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  fluid: ImageSharpFluidFilterInput
  sizes: ImageSharpSizesFilterInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float
  height: Float
  src: String
  srcSet: String
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  src: String
  srcSet: String
  srcWebp: String
  srcSetWebp: String
  sizes: String
  originalImg: String
  originalName: String
  presentationWidth: Int
  presentationHeight: Int
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpResolutions {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float
  height: Float
  src: String
  srcSet: String
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

input ImageSharpResolutionsFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpSizes {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  src: String
  srcSet: String
  srcWebp: String
  srcSetWebp: String
  sizes: String
  originalImg: String
  originalName: String
  presentationWidth: Int
  presentationHeight: Int
}

input ImageSharpSizesFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type InstaNode implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  type: String
  username: String
  likes: Int
  caption: String
  thumbnails: [InstaNodeThumbnails]
  mediaType: String
  preview: String
  original: String
  timestamp: Int
  dimensions: InstaNodeDimensions
  comments: Int
  localFile: File
}

type InstaNodeConnection {
  totalCount: Int!
  edges: [InstaNodeEdge!]!
  nodes: [InstaNode!]!
  pageInfo: PageInfo!
  distinct(field: InstaNodeFieldsEnum!): [String!]!
  group(
    skip: Int
    limit: Int
    field: InstaNodeFieldsEnum!
  ): [InstaNodeGroupConnection!]!
}

type InstaNodeDimensions {
  height: Int
  width: Int
}

input InstaNodeDimensionsFilterInput {
  height: IntQueryOperatorInput
  width: IntQueryOperatorInput
}

type InstaNodeEdge {
  next: InstaNode
  node: InstaNode!
  previous: InstaNode
}

enum InstaNodeFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  type
  username
  likes
  caption
  thumbnails
  thumbnails___src
  thumbnails___config_width
  thumbnails___config_height
  mediaType
  preview
  original
  timestamp
  dimensions___height
  dimensions___width
  comments
  localFile___id
  localFile___parent___id
  localFile___parent___parent___id
  localFile___parent___parent___children
  localFile___parent___children
  localFile___parent___children___id
  localFile___parent___children___children
  localFile___parent___internal___content
  localFile___parent___internal___contentDigest
  localFile___parent___internal___description
  localFile___parent___internal___fieldOwners
  localFile___parent___internal___ignoreType
  localFile___parent___internal___mediaType
  localFile___parent___internal___owner
  localFile___parent___internal___type
  localFile___children
  localFile___children___id
  localFile___children___parent___id
  localFile___children___parent___children
  localFile___children___children
  localFile___children___children___id
  localFile___children___children___children
  localFile___children___internal___content
  localFile___children___internal___contentDigest
  localFile___children___internal___description
  localFile___children___internal___fieldOwners
  localFile___children___internal___ignoreType
  localFile___children___internal___mediaType
  localFile___children___internal___owner
  localFile___children___internal___type
  localFile___internal___content
  localFile___internal___contentDigest
  localFile___internal___description
  localFile___internal___fieldOwners
  localFile___internal___ignoreType
  localFile___internal___mediaType
  localFile___internal___owner
  localFile___internal___type
  localFile___sourceInstanceName
  localFile___absolutePath
  localFile___relativePath
  localFile___extension
  localFile___size
  localFile___prettySize
  localFile___modifiedTime
  localFile___accessTime
  localFile___changeTime
  localFile___birthTime
  localFile___root
  localFile___dir
  localFile___base
  localFile___ext
  localFile___name
  localFile___relativeDirectory
  localFile___dev
  localFile___mode
  localFile___nlink
  localFile___uid
  localFile___gid
  localFile___rdev
  localFile___ino
  localFile___atimeMs
  localFile___mtimeMs
  localFile___ctimeMs
  localFile___birthtimeMs
  localFile___atime
  localFile___mtime
  localFile___ctime
  localFile___birthtime
  localFile___url
  localFile___publicURL
}

input InstaNodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  type: StringQueryOperatorInput
  username: StringQueryOperatorInput
  likes: IntQueryOperatorInput
  caption: StringQueryOperatorInput
  thumbnails: InstaNodeThumbnailsFilterListInput
  mediaType: StringQueryOperatorInput
  preview: StringQueryOperatorInput
  original: StringQueryOperatorInput
  timestamp: IntQueryOperatorInput
  dimensions: InstaNodeDimensionsFilterInput
  comments: IntQueryOperatorInput
  localFile: FileFilterInput
}

type InstaNodeGroupConnection {
  totalCount: Int!
  edges: [InstaNodeEdge!]!
  nodes: [InstaNode!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input InstaNodeSortInput {
  fields: [InstaNodeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type InstaNodeThumbnails {
  src: String
  config_width: Int
  config_height: Int
}

input InstaNodeThumbnailsFilterInput {
  src: StringQueryOperatorInput
  config_width: IntQueryOperatorInput
  config_height: IntQueryOperatorInput
}

input InstaNodeThumbnailsFilterListInput {
  elemMatch: InstaNodeThumbnailsFilterInput
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

scalar JSON

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

type Mdx implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  frontmatter: MdxFrontmatter
  rawBody: String
  fileAbsolutePath: String
  code: MDXCodeMdx
  excerpt(pruneLength: Int = 140): String
  headings(depth: HeadingsMdx): [MdxHeadingMdx]
  html: String
  tableOfContents(maxDepth: Int): JSON
  timeToRead: Int
  wordCount: wordCountsMdx
}

type MDXCodeMdx {
  body: String
  scope: String
}

input MDXCodeMdxFilterInput {
  body: StringQueryOperatorInput
  scope: StringQueryOperatorInput
}

type MdxConnection {
  totalCount: Int!
  edges: [MdxEdge!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  distinct(field: MdxFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: MdxFieldsEnum!): [MdxGroupConnection!]!
}

type MdxEdge {
  next: Mdx
  node: Mdx!
  previous: Mdx
}

enum MdxFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  frontmatter___title
  frontmatter___slug
  frontmatter___author
  frontmatter___image___id
  frontmatter___image___parent___id
  frontmatter___image___parent___children
  frontmatter___image___children
  frontmatter___image___children___id
  frontmatter___image___children___children
  frontmatter___image___internal___content
  frontmatter___image___internal___contentDigest
  frontmatter___image___internal___description
  frontmatter___image___internal___fieldOwners
  frontmatter___image___internal___ignoreType
  frontmatter___image___internal___mediaType
  frontmatter___image___internal___owner
  frontmatter___image___internal___type
  frontmatter___image___sourceInstanceName
  frontmatter___image___absolutePath
  frontmatter___image___relativePath
  frontmatter___image___extension
  frontmatter___image___size
  frontmatter___image___prettySize
  frontmatter___image___modifiedTime
  frontmatter___image___accessTime
  frontmatter___image___changeTime
  frontmatter___image___birthTime
  frontmatter___image___root
  frontmatter___image___dir
  frontmatter___image___base
  frontmatter___image___ext
  frontmatter___image___name
  frontmatter___image___relativeDirectory
  frontmatter___image___dev
  frontmatter___image___mode
  frontmatter___image___nlink
  frontmatter___image___uid
  frontmatter___image___gid
  frontmatter___image___rdev
  frontmatter___image___ino
  frontmatter___image___atimeMs
  frontmatter___image___mtimeMs
  frontmatter___image___ctimeMs
  frontmatter___image___birthtimeMs
  frontmatter___image___atime
  frontmatter___image___mtime
  frontmatter___image___ctime
  frontmatter___image___birthtime
  frontmatter___image___url
  frontmatter___image___publicURL
  frontmatter____PARENT
  rawBody
  fileAbsolutePath
  code___body
  code___scope
  excerpt
  headings
  headings___value
  headings___depth
  html
  tableOfContents
  timeToRead
  wordCount___paragraphs
  wordCount___sentences
  wordCount___words
}

input MdxFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  frontmatter: MdxFrontmatterFilterInput
  rawBody: StringQueryOperatorInput
  fileAbsolutePath: StringQueryOperatorInput
  code: MDXCodeMdxFilterInput
  excerpt: StringQueryOperatorInput
  headings: MdxHeadingMdxFilterListInput
  html: StringQueryOperatorInput
  tableOfContents: JSONQueryOperatorInput
  timeToRead: IntQueryOperatorInput
  wordCount: wordCountsMdxFilterInput
}

type MdxFrontmatter {
  title: String
  slug: String
  author: String
  image: File
  _PARENT: String
}

input MdxFrontmatterFilterInput {
  title: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  author: StringQueryOperatorInput
  image: FileFilterInput
  _PARENT: StringQueryOperatorInput
}

type MdxGroupConnection {
  totalCount: Int!
  edges: [MdxEdge!]!
  nodes: [Mdx!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type MdxHeadingMdx {
  value: String
  depth: Int
}

input MdxHeadingMdxFilterInput {
  value: StringQueryOperatorInput
  depth: IntQueryOperatorInput
}

input MdxHeadingMdxFilterListInput {
  elemMatch: MdxHeadingMdxFilterInput
}

input MdxSortInput {
  fields: [MdxFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

type Query {
  file(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    sourceInstanceName: StringQueryOperatorInput
    absolutePath: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    size: IntQueryOperatorInput
    prettySize: StringQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    accessTime: DateQueryOperatorInput
    changeTime: DateQueryOperatorInput
    birthTime: DateQueryOperatorInput
    root: StringQueryOperatorInput
    dir: StringQueryOperatorInput
    base: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    name: StringQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    dev: FloatQueryOperatorInput
    mode: IntQueryOperatorInput
    nlink: IntQueryOperatorInput
    uid: IntQueryOperatorInput
    gid: IntQueryOperatorInput
    rdev: IntQueryOperatorInput
    ino: FloatQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    atime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    ctime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    url: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
  ): File
  allFile(
    filter: FileFilterInput
    sort: FileSortInput
    skip: Int
    limit: Int
  ): FileConnection
  sitePage(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    path: StringQueryOperatorInput
    jsonName: StringQueryOperatorInput
    internalComponentName: StringQueryOperatorInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    context: SitePageContextFilterInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
    componentPath: StringQueryOperatorInput
  ): SitePage
  allSitePage(
    filter: SitePageFilterInput
    sort: SitePageSortInput
    skip: Int
    limit: Int
  ): SitePageConnection
  sitePlugin(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    resolve: StringQueryOperatorInput
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    nodeAPIs: StringQueryOperatorInput
    browserAPIs: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    pluginFilepath: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
  ): SitePlugin
  allSitePlugin(
    filter: SitePluginFilterInput
    sort: SitePluginSortInput
    skip: Int
    limit: Int
  ): SitePluginConnection
  site(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    siteMetadata: SiteSiteMetadataFilterInput
    port: IntQueryOperatorInput
    host: StringQueryOperatorInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    buildTime: DateQueryOperatorInput
  ): Site
  allSite(
    filter: SiteFilterInput
    sort: SiteSortInput
    skip: Int
    limit: Int
  ): SiteConnection
  directory(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    sourceInstanceName: StringQueryOperatorInput
    absolutePath: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    size: IntQueryOperatorInput
    prettySize: StringQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    accessTime: DateQueryOperatorInput
    changeTime: DateQueryOperatorInput
    birthTime: DateQueryOperatorInput
    root: StringQueryOperatorInput
    dir: StringQueryOperatorInput
    base: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    name: StringQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    dev: FloatQueryOperatorInput
    mode: IntQueryOperatorInput
    nlink: IntQueryOperatorInput
    uid: IntQueryOperatorInput
    gid: IntQueryOperatorInput
    rdev: IntQueryOperatorInput
    ino: FloatQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    atime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    ctime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
  ): Directory
  allDirectory(
    filter: DirectoryFilterInput
    sort: DirectorySortInput
    skip: Int
    limit: Int
  ): DirectoryConnection
  mdx(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    frontmatter: MdxFrontmatterFilterInput
    rawBody: StringQueryOperatorInput
    fileAbsolutePath: StringQueryOperatorInput
    code: MDXCodeMdxFilterInput
    excerpt: StringQueryOperatorInput
    headings: MdxHeadingMdxFilterListInput
    html: StringQueryOperatorInput
    tableOfContents: JSONQueryOperatorInput
    timeToRead: IntQueryOperatorInput
    wordCount: wordCountsMdxFilterInput
  ): Mdx
  allMdx(
    filter: MdxFilterInput
    sort: MdxSortInput
    skip: Int
    limit: Int
  ): MdxConnection
  imageSharp(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    fixed: ImageSharpFixedFilterInput
    resolutions: ImageSharpResolutionsFilterInput
    fluid: ImageSharpFluidFilterInput
    sizes: ImageSharpSizesFilterInput
    original: ImageSharpOriginalFilterInput
    resize: ImageSharpResizeFilterInput
  ): ImageSharp
  allImageSharp(
    filter: ImageSharpFilterInput
    sort: ImageSharpSortInput
    skip: Int
    limit: Int
  ): ImageSharpConnection
  instaNode(
    id: StringQueryOperatorInput
    parent: NodeFilterInput
    children: NodeFilterListInput
    internal: InternalFilterInput
    type: StringQueryOperatorInput
    username: StringQueryOperatorInput
    likes: IntQueryOperatorInput
    caption: StringQueryOperatorInput
    thumbnails: InstaNodeThumbnailsFilterListInput
    mediaType: StringQueryOperatorInput
    preview: StringQueryOperatorInput
    original: StringQueryOperatorInput
    timestamp: IntQueryOperatorInput
    dimensions: InstaNodeDimensionsFilterInput
    comments: IntQueryOperatorInput
    localFile: FileFilterInput
  ): InstaNode
  allInstaNode(
    filter: InstaNodeFilterInput
    sort: InstaNodeSortInput
    skip: Int
    limit: Int
  ): InstaNodeConnection
}

type Site implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  pathPrefix: String
  polyfill: Boolean
  buildTime(
    formatString: String
    fromNow: Boolean
    difference: String
    locale: String
  ): Date
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  siteMetadata___title
  siteMetadata___description
  port
  host
  pathPrefix
  polyfill
  buildTime
}

input SiteFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  polyfill: BooleanQueryOperatorInput
  buildTime: DateQueryOperatorInput
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type SitePage implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  path: String
  jsonName: String
  internalComponentName: String
  component: String
  componentChunkName: String
  isCreatedByStatefulCreatePages: Boolean
  context: SitePageContext
  pluginCreator: SitePlugin
  pluginCreatorId: String
  componentPath: String
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  group(
    skip: Int
    limit: Int
    field: SitePageFieldsEnum!
  ): [SitePageGroupConnection!]!
}

type SitePageContext {
  slug: String
}

input SitePageContextFilterInput {
  slug: StringQueryOperatorInput
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  path
  jsonName
  internalComponentName
  component
  componentChunkName
  isCreatedByStatefulCreatePages
  context___slug
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___pluginOptions___defaultLayouts___default
  pluginCreator___pluginOptions___gatsbyRemarkPlugins
  pluginCreator___pluginOptions___gatsbyRemarkPlugins___resolve
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___username
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___author
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreatorId
  componentPath
}

input SitePageFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  path: StringQueryOperatorInput
  jsonName: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  component: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  context: SitePageContextFilterInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePlugin implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  resolve: String
  name: String
  version: String
  pluginOptions: SitePluginPluginOptions
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  packageJson: SitePluginPackageJson
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  group(
    skip: Int
    limit: Int
    field: SitePluginFieldsEnum!
  ): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  resolve
  name
  version
  pluginOptions___defaultLayouts___default
  pluginOptions___gatsbyRemarkPlugins
  pluginOptions___gatsbyRemarkPlugins___resolve
  pluginOptions___name
  pluginOptions___path
  pluginOptions___username
  pluginOptions___pathCheck
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___author
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
}

input SitePluginFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  author: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  author: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

type SitePluginPluginOptions {
  defaultLayouts: SitePluginPluginOptionsDefaultLayouts
  gatsbyRemarkPlugins: [SitePluginPluginOptionsGatsbyRemarkPlugins]
  name: String
  path: String
  username: String
  pathCheck: Boolean
}

type SitePluginPluginOptionsDefaultLayouts {
  default: String
}

input SitePluginPluginOptionsDefaultLayoutsFilterInput {
  default: StringQueryOperatorInput
}

input SitePluginPluginOptionsFilterInput {
  defaultLayouts: SitePluginPluginOptionsDefaultLayoutsFilterInput
  gatsbyRemarkPlugins: SitePluginPluginOptionsGatsbyRemarkPluginsFilterListInput
  name: StringQueryOperatorInput
  path: StringQueryOperatorInput
  username: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
}

type SitePluginPluginOptionsGatsbyRemarkPlugins {
  resolve: String
}

input SitePluginPluginOptionsGatsbyRemarkPluginsFilterInput {
  resolve: StringQueryOperatorInput
}

input SitePluginPluginOptionsGatsbyRemarkPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsGatsbyRemarkPluginsFilterInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteSiteMetadata {
  title: String
  description: String
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

type wordCountsMdx {
  paragraphs: Int
  sentences: Int
  words: Int
}

input wordCountsMdxFilterInput {
  paragraphs: IntQueryOperatorInput
  sentences: IntQueryOperatorInput
  words: IntQueryOperatorInput
}

